pub fn cube_data() -> (Vec<[i8; 3]>, Vec<[i8; 3]>, Vec<u16>) {
    let positions = [
        [-1, -1, 1],
        [1, -1, 1],
        [1, 1, 1],
        [-1, 1, 1],
        [-1, -1, -1],
        [1, -1, -1],
        [1, 1, -1],
        [-1, 1, -1],
    ];

    let colors = [
        [0, 0, 1],
        [1, 0, 1],
        [1, 1, 1],
        [0, 1, 1],
        [0, 0, 0],
        [1, 0, 0],
        [1, 1, 0],
        [0, 1, 0],
    ];

    let indices = [
        0, 1, 2, 2, 3, 0, // front
        1, 5, 6, 6, 2, 1, // right
        4, 7, 6, 6, 5, 4, // back
        0, 3, 7, 7, 4, 0, // left
        3, 2, 6, 6, 7, 3, // top
        0, 4, 5, 5, 1, 0, // bottom
    ];

    // let uvs = [
    //     // front
    //     [0, 0],
    //     [1, 0],
    //     [0, 1],
    //     [0, 1],
    //     [1, 0],
    //     [1, 1],
    //     // right
    //     [0, 0],
    //     [1, 0],
    //     [0, 1],
    //     [0, 1],
    //     [1, 0],
    //     [1, 1],
    //     // back
    //     [0, 0],
    //     [1, 0],
    //     [0, 1],
    //     [0, 1],
    //     [1, 0],
    //     [1, 1],
    //     // left
    //     [0, 0],
    //     [1, 0],
    //     [0, 1],
    //     [0, 1],
    //     [1, 0],
    //     [1, 1],
    //     // top
    //     [0, 0],
    //     [1, 0],
    //     [0, 1],
    //     [0, 1],
    //     [1, 0],
    //     [1, 1],
    //     // bottom
    //     [0, 0],
    //     [1, 0],
    //     [0, 1],
    //     [0, 1],
    //     [1, 0],
    //     [1, 1],
    // ];

    // let normals = [
    //     // front
    //     [0, 0, 1],
    //     [0, 0, 1],
    //     [0, 0, 1],
    //     [0, 0, 1],
    //     [0, 0, 1],
    //     [0, 0, 1],
    //     // right
    //     [1, 0, 0],
    //     [1, 0, 0],
    //     [1, 0, 0],
    //     [1, 0, 0],
    //     [1, 0, 0],
    //     [1, 0, 0],
    //     // back
    //     [0, 0, -1],
    //     [0, 0, -1],
    //     [0, 0, -1],
    //     [0, 0, -1],
    //     [0, 0, -1],
    //     [0, 0, -1],
    //     // left
    //     [-1, 0, 0],
    //     [-1, 0, 0],
    //     [-1, 0, 0],
    //     [-1, 0, 0],
    //     [-1, 0, 0],
    //     [-1, 0, 0],
    //     // top
    //     [0, 1, 0],
    //     [0, 1, 0],
    //     [0, 1, 0],
    //     [0, 1, 0],
    //     [0, 1, 0],
    //     [0, 1, 0],
    //     // bottom
    //     [0, -1, 0],
    //     [0, -1, 0],
    //     [0, -1, 0],
    //     [0, -1, 0],
    //     [0, -1, 0],
    //     [0, -1, 0],
    // ];

    (positions.to_vec(), colors.to_vec(), indices.to_vec())
}
